apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-pipeline
spec:
  params:
    - description: Source Repository URL
      name: git-url
      type: string

    - description: Fully Qualified Output Image
      name: output-image
      type: string

    - default: "main"
      description: Revision of the Source Repository
      name: revision
      type: string

    - default: .
      description: Path to the source code of an application's component from where
        to build image.
      name: path-context
      type: string

    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter
        path-context
      name: dockerfile
      type: string

    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string

    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string

    - default: "true"
      description: Execute the build with network isolation
      name: hermetic
      type: string

    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string

    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after

    - default: "false"
      description: Build a source image.
      name: build-source-image
      type: string

    - default: "false"
      description: Add built image into an OCI image index
      name: build-image-index
      type: string

    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array

    - default: ""
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string

  tasks:
  # - name: init
  #   params:
  #   - name: image-url
  #     value: $(params.output-image)
  #   - name: rebuild
  #     value: $(params.rebuild)
  #   - name: skip-checks
  #     value: $(params.skip-checks)
  #   taskRef:
  #     params:
  #     - name: name
  #       value: init
  #     - name: bundle
  #       value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:f239f38bba3a8351c8cb0980fde8e2ee477ded7200178b0f45175e4006ff1dca
  #     - name: kind
  #       value: task
  #     resolver: bundles
  - name: clone-repository
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
    runAfter:
    - init
    taskRef:
      params:
      - name: name
        value: git-clone
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    workspaces:
    - name: output
      workspace: workspace
    - name: basic-auth
      workspace: git-auth
  - name: prefetch-dependencies
    params:
    - name: input
      value: $(params.prefetch-input)
    runAfter:
    - clone-repository
    taskRef:
      params:
      - name: name
        value: prefetch-dependencies
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.prefetch-input)
      operator: notin
      values:
      - ""
    workspaces:
    - name: source
      workspace: workspace
    - name: git-basic-auth
      workspace: git-auth
    - name: netrc
      workspace: netrc
  - name: build-container
    params:
    - name: IMAGE
      value: $(params.output-image)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    - name: HERMETIC
      value: $(params.hermetic)
    - name: PREFETCH_INPUT
      value: $(params.prefetch-input)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: BUILD_ARGS
      value:
      - $(params.build-args[*])
    - name: BUILD_ARGS_FILE
      value: $(params.build-args-file)
    runAfter:
    - prefetch-dependencies
    # taskRef:
    #   params:
    #   - name: name
    #     value: buildah
    #   - name: bundle
    #     value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.2
    #   - name: kind
    #     value: task
    #   resolver: bundles
    taskRef:
      params:
      - name: name
        value: buildah
      - name: url
        value: https://github.com/konflux-ci/bazel-builder.git
      - name: revision
        value: main
      - name: pathInRepo
        value: test/buildah-build-task.yaml
      - name: kind
        value: task
      resolver: git
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    workspaces:
    - name: source
      workspace: workspace
  workspaces:
    - name: workspace
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}